'use strict';
// The module 'vscode' contains the VS Code extensibility API
// Import the module and reference it with the alias vscode in your code below
import * as vscode from 'vscode';

// this method is called when your extension is activated
// your extension is activated the very first time the command is executed
export function activate(context: vscode.ExtensionContext) {
    // console.log('Start toggleCharCase');

    /**
     * 指定文字の大文字・小文字を切り替える
     * @param c 
     */
    let toggleCharCase = (c: string): string {
        if ( (c >= "A") && (c <= "Z") ) {
            // 半角アルファベット大文字
            c = c.toLocaleLowerCase();
        } else if ( (c >= "a") && (c <= "z") ) {
            // 半角アルファベット小文字
            c = c.toLocaleUpperCase();
        } else if ( (c >= "Ａ") && (c <= "Ｚ") ) {
            // 全角アルファベット大文字
            c = c.toLocaleLowerCase();
        } else if ( (c >= "ａ") && (c <= "ｚ") ) {
            // 全角アルファベット小文字
            c = c.toLocaleUpperCase();
        } else {
            c = null;
        }
        return c;
    }

    // The command has been defined in the package.json file
    let disposable = vscode.commands.registerCommand('extension.toggleCharCase', () => {
        // The code you place here will be executed every time your command is executed
        let editor = vscode.window.activeTextEditor;
        let doc = vscode.window.activeTextEditor.document;
        // 現在の選択範囲を取得
        let sel = editor.selection;
        if ( sel.start.isEqual(sel.end) ) {
            // 範囲選択されていないので１文字変換

            // カーソル位置を取得
            let cursor  = sel.start;
            // カーソルの行の内容を取得
            let line = doc.lineAt(cursor.line).text;
            // カーソル位置の文字を取得
            let c = line.substr(cursor.character,1);

            c = toggleCharCase(c);

            // 置換できたら
            if ( c ) {
                // カーソル位置の文字範囲を作成
                let range = new vscode.Range(
                    new vscode.Position(cursor.line,cursor.character), 
                    new vscode.Position(cursor.line,cursor.character+1)
                );

                // 大文字・小文字変換した文字と置換
                editor.edit(edit => edit.replace(range, c));
            }

            // カーソルを右に1文字移動
            vscode.commands.executeCommand('cursorRight');
            // editor.selection = new vscode.Selection(
            //     new vscode.Position(cursor.line,cursor.character+1), 
            //     new vscode.Position(cursor.line,cursor.character+1)
            // );

        } else {
            // 範囲選択されているので一括変換
            let text = doc.getText(sel).split('');

            for ( let i = 0; i < text.length; ++ i ) {
                let c = text[i];
            }
        }
    });

    context.subscriptions.push(disposable);
}

// this method is called when your extension is deactivated
export function deactivate() {
}