{
/*
\t// Place your snippets for PHP here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1'),",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"php tag": {
		"prefix": "<?php",
		"body": [
			"<?php",
			"?>"
		],
		"description": "PHP タグ"
	},
	"php tag for phtml": {
		"prefix": "?>",
		"body": [
			"?>",
			"<?php"
		],
		"description": "HTML用 PHP タグ"
	},
	"php tag for phtml inline": {
		"prefix": "EchoHtml",
		"body": [
			"<?php EchoHtml( ); ?>"
		],
		"description": "HTML インライン用 PHP タグ"
	},
	"File Headder": {
		"prefix": "header",
		"body": [
			"<?php",
			"/**",
			" * ${1:タイトル}",
			" * ",
			" * filename:  $TM_FILENAME",
			" * ",
			" * @package   ",
			" * @version   1.0.0",
			" * @copyright Copyright (C) 2017 CREANSMAERD CO.,LTD.  All rights reserved.",
			" * @date      ",
			" * @author    木屋 善夫",
			" */",
			"$2",
			"?>"
		],
		"description": "ファイルヘッダー"
	},
	"Method": {
		"prefix": "method",
		"body": [
			"/**",
			" * ${1:タイトル}",
			" * ",
			" * @access public",
			" * @param  ",
			" * @return ",
			" */",
			"public function ${2:メソッド名}( ) {",
			"\t$3",
			"\treturn;",
			"}",
			""
		],
		"description": "メソッド"
	},
	"Variable": {
		"prefix": "var",
		"body": [
			"/**",
			" * ${1:タイトル}",
			" * @var ${2:型}",
			" */",
			"public $${3:変数名} = '';",
			""
		],
		"description": "プロパティ"
	},
	"Constructor": {
		"prefix": "construct",
		"body": [
			"/**",
			" * 構築",
			" * ",
			" * @param  ",
			" */",
			"public function __construct( )",
			"{",
			"\t// デフォルトインプリメンテーションの呼び出し",
			"\tparent::__construct( ),",
			"}",
			""
		],
		"description": "構築"
	},
	"Destructor": {
		"prefix": "destruct",
		"body": [
			"/**",
			" * 消滅",
			" * ",
			" */",
			"public function __destruct( )",
			"{",
			"\t// デフォルトインプリメンテーションの呼び出し",
			"\tparent::__destruct( ),",
			"}",
			""
		],
		"description": "消滅"
	},
	"Event Handler": {
		"prefix": "on",
		"body": [
			"/**",
			" * [$1]ボタンを押した処理",
			" * ",
			" * @access public",
			" * @param  string $value name属性値",
			" * @return boolean コマンドディスパッチを FAILED:続行, SUCCEEDED:終了",
			" */",
			"protected function on{$2:名前}( $value )",
			"{",
			"\t$3",
			"\t",
			"\t// ページ遷移",
			"\t$this->PageRedirect( '' ),",
			"",
			"\t//",
			"\treturn SUCCEEDED;",
			"}"
		],
		"description": "イベントハンドラー"
	},
	"Ajax Handler": {
		"prefix": "onAjax",
		"body": [
			"/**",
			" * [GET_] 選択肢を取得するAJAX処理",
			" * ",
			" * @access public",
			" * @param  string $val ",
			" * @return boolean コマンドディスパッチを FAILED:継続 SUCCEEDED:終了",
			" * @throw  ",
			" */",
			"public function onAjax{$1:名前}( $val )",
			"{",
			"\t// AJAX なので HTML は出力しない",
			"\t$this->m_blUseHTML = FALSE,",
			"",
			"\t// 戻り値用配列",
			"\t$data = [],",
			"",
			"\t// json を出力",
			"\t$this->EchoJSON( $data ),",
			"",
			"\t//",
			"\treturn SUCCEEDED;",
			"}"
		],
		"description": "AJAX ハンドラ"
	},
	"Function": {
		"prefix": "function",
		"body": [
			"/**",
			" * ${1:関数のタイトル}",
			" * ",
			" * @param  ",
			" * @return ",
			" */",
			"function {$2:関数名}( )",
			"{",
			"\t$2",
			"\treturn;",
			"}"
		],
		"description": "関数"
	},
	"Script": {
		"prefix": "script",
		"body": [
			"<script type=\"text/javascript\">",
			"$(function() {",
			"}),",
			"</script>"
		],
		"description": "scrpt タグ"
	},
	"Style": {
		"prefix": "style",
		"body": [
			"<style type=\"text/css\">",
			"${1:セレクタ} {",
			"\t$2",
			"}",
			"</style>"
		],
		"description": "style タグ"
	},
	"SUCCEEDED": {
		"prefix": "SUCCEEDED",
		"body": [
			"SUCCEEDED"
		],
		"description": "SUCCEEDED"
	},
	"FAILED": {
		"prefix": "FAILED",
		"body": [
			"FAILED"
		],
		"description": "FAILED"
	}
}